//
// Created by machiry on 12/28/16.
//
#include "bug_detectors/warnings/VulnerabilityWarning.h"

using namespace llvm;

namespace DRCHECKER {

    void VulnerabilityWarning::printCompleteWarning(llvm::raw_ostream &O) const {
        O << "Potential vulnerability detected by: " << this->found_by << "\n";
        O << " " << this->warning_string << "\n";
        O << "  at: ";
        InstructionUtils::printInst(this->target_instr,O);
        O << "  Call Context:\n";
        for(Instruction *currCallSite : this->callSiteTrace) {
            O << "   ";
            InstructionUtils::printInst(currCallSite,O);
        }
        O << "  Instruction Trace:\n";
        for(InstLoc *currInst : this->trace) {
            O << "   ";
            if (currInst) {
                currInst->print(O);
            }
        }
        O << "\n";
    }

    void VulnerabilityWarning::printWarning(llvm::raw_ostream &O) const {
        O << "\"warn_data\":{";
        O << "\"by\":\"";
        O << InstructionUtils::escapeJsonString(this->found_by);
        O << "\",";
        O << "\"warn_str\":\"";
        O << InstructionUtils::escapeJsonString(this->warning_string);
        O << "\",";
        InstructionUtils::printInstJson(this->target_instr,O);
        O << ",\"inst_trace\":";
        printInstlocTraceJson(&(this->trace),O);
        O << "}\n";
    }
}

